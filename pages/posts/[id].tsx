import Head from "next/head";
import { NotionRenderer } from "react-notion-x";
import { getSinglePost, getPublishedPosts } from "../../lib/notion";
import styles from "../../styles/Post.module.css";
import { useTheme } from "next-themes";
import { useEffect, useState } from "react";
import { Text } from "../../components/Text";
import Link from "next/link";

import dynamic from "next/dynamic";

const Code = dynamic(() =>
  import("react-notion-x/build/third-party/code").then((m) => m.Code)
);
const Collection = dynamic(() =>
  import("react-notion-x/build/third-party/collection").then(
    (m) => m.Collection
  )
);
const Equation = dynamic(() =>
  import("react-notion-x/build/third-party/equation").then((m) => m.Equation)
);
const Pdf = dynamic(
  () => import("react-notion-x/build/third-party/pdf").then((m) => m.Pdf),
  {
    ssr: false,
  }
);
const Modal = dynamic(
  () => import("react-notion-x/build/third-party/modal").then((m) => m.Modal),
  {
    ssr: false,
  }
);

const Post = ({ page, meta }: { page: any; meta: any }) => {
  const { theme, setTheme } = useTheme();
  const [mounted, setMounted] = useState(false);
  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }
  return (
    <>
      <Head>
        <title>
          {meta ? meta.title.map((title: any) => title.plain_text) : "Loading"}
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="favicon.ico" />
      </Head>
      <div className={`${styles.container} ${styles.fade_in}`}>
        <div className={styles.description}>
          <div className={styles.time}>
            <span>{meta?.date}</span>
          </div>
          <h1>
            <Text text={meta?.title}></Text>
          </h1>
          <div className={styles.authors}>By {meta.authors}</div>

          <div className={styles.tags}>
            {meta?.tags.map((tag: any, index: number) => (
              <div key={index}>
                <Link href={`/tags/${tag.name}`}>{tag.name}</Link>
              </div>
            ))}
          </div>
        </div>
        <hr />
        <NotionRenderer
          recordMap={page}
          components={{
            Code,
            Collection,
            Equation,
            Modal,
            Pdf,
          }}
          darkMode={theme === "dark"}
        ></NotionRenderer>
      </div>
    </>
  );
};

export default Post;

export const getStaticProps = async ({ params }: { params: any }) => {
  const { page, meta } = await getSinglePost(params.id);
  return {
    props: {
      page,
      meta,
    },
    revalidate: 60,
  };
};

export const getStaticPaths = async () => {
  const posts = await getPublishedPosts();
  return {
    paths: posts.map((post) => ({
      params: { id: post.id },
    })),
    fallback: false,
  };
};
